@page "/getdatabases"

@using FrostBlazeServer.Data
@using FrostDbClient 
@inject WeatherForecastService ForecastService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (databases == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>database name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var name in databases)
            {
                <tr>
                    <td>@name</td>
                </tr>
            }
        </tbody>
    </table>

    <p>Databases</p>
    <select id="databaseNames">
    @foreach (var db in databases)
    {
        <option value="@db">@db</option>
    }
    </select>

    <h1>Create table in database</h1>

    TableName: <input type="text" id="tableName" @bind="tableName"/>

    <input type="button" @onclick="createTable" />
}

@code {
    private WeatherForecast[] forecasts;
    private List<string> databases;
    private string databaseName;
    private string tableName;

    private void createTable()
    {
        throw new NotImplementedException();
    }

    protected override async Task OnInitializedAsync()
    {
        //forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
        databases = await GetDatabaseNames();
    }

    private async Task<List<string>> GetDatabaseNames()
    {
        string ipAddress = "127.0.0.1";
        int portNumber = 519;
        int localPort = 525;
        var client = new FrostClient(ipAddress, "127.0.0.1", portNumber, localPort);

        var task = client.GetDatabasesAsync();
        await task;

        List<string> items = task.Result;

        client.GetDatabases();

        return client.Info.DatabaseNames;   
    }
}
